<!DOCTYPE html>
<html>
  <head>
    <title>theBeast - example 1</title>
    <script type="text/javascript" src="http://code.jquery.com/jquery-1.7.min.js"></script>
    <script src="/theBeast.js" type="text/javascript"></script>
    <link media="screen" rel="stylesheet" href="site.css" type="text/css">
    <script>
      theBeast.add({
        fadeIn: function(){
          console.log("loading fadein module");
          $('[data-theBeast="fadeIn"]').hide();
          $("#example-1").click(function(){
            $('[data-theBeast="fadeIn"]').fadeIn(500, function(){
              var $this = $(this);
              setTimeout(function(){$this.fadeOut(500)}, 500)});
          });
        }
      });
    </script>
  </head>
  <body>
    <h1>theBeast example 1: module declaration</h1>
    <div class="download"><a href="theBeast.js">theBeast.js</a>&nbsp;|&nbsp;<a href="theBeast.min.js">theBeast.min.js</a></div>
    <div id="content">
      <p>theBeast is a mini-framework (1.5 KB minified) that lets you organize your javascript in modules, have them speak to each other and linked to the dom, greatly improving maintainability.</p>
      <h2>Add module</h2>
      <p>Actually, the obvious pre-requisite is to have jQuery and theBeast.js:</p>
      <code>
&lt;script type=&quot;text/javascript&quot; src=&quot;http://code.jquery.com/jquery-1.7.min.js&quot;&gt;&lt;/script&gt;<br/>
&lt;script src=&quot;/theBeast.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;
      </code>
      <p>Let's add a module that would make an element fade in and out:</p>
      <code>
  &nbsp;&nbsp;&lt;script&gt;<br/>
  &nbsp;&nbsp;&nbsp;theBeast.add({<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;<strong>fadeIn</strong>: function(){<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(&quot;loading fadein module&quot;);<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&quot;#example-1&quot;).click(function(){<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;$(&#39;[data-theBeast=&quot;fadeIn&quot;]&#39;).fadeIn(500, function(){<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var $this = $(this);<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function(){$this.fadeOut(500)}, 500)});<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;});<br/>
  &nbsp;&nbsp;&nbsp;&nbsp;}<br/>
  &nbsp;&nbsp;&nbsp;});<br/>
  &nbsp;&nbsp;&lt;/script&gt;<br/>
      </code><br/>
      <button id="example-1">DO IT!</button> &lt; button with id=example-1
      <div data-theBeast="fadeIn" class="rect">This is the div that fades in and out!</div>
      <div data-theBeast="fadeIn" class="rect">This is another div that fades in and out!</div>
      <p>Now, let's look at the code and see that the DIVs have an attribute data-theBeast="fadeIn":</p>
      <code>
&lt;div data-theBeast=&quot;fadeIn&quot;&gt;This is the div that fades in and out!&lt;/div&gt;<br/>
&lt;div data-theBeast=&quot;fadeIn&quot;&gt;This is another div that fades in and out!&lt;/div&gt;
      </code>
      <p>This tells theBeast to load the module fadeIn (if it exists) on document ready. Even if 2 elements have the module declared in there attributes, the module will be loaded only once. You can check the console, "loading fadein module" is displayed only once</p>
      <p>This example shows already the 2 main reasons to use theBeast:</p>
      <ul>
        <li><strong>Readability</strong>: HTML and javascript are now visibly linked. The whole remains unobtrusive.</li>
        <li><strong>Code Reuse</strong>: One module can be called on any page you want. So you can have only one big js file, and pick the modules you want</li>
      </ul>
      <% (1..settings.page_count).each do |page_number| %><a href="/example<%= page_number %>"><%= page_number %></a>&nbsp;<% end %>
      <a href="/example2">next &gt;&gt;</a>
    </div>
  </body>
</html>